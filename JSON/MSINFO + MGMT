import platform
import psutil
import json

def get_system_info():
    # Basic system information
    system_info = {
        "System": platform.system(),
        "Node Name": platform.node(),
        "Release": platform.release(),
        "Version": platform.version(),
        "Machine": platform.machine(),
        "Processor": platform.processor(),
        "Architecture": platform.architecture(),
    }

    # CPU information
    cpu_info = {
        "Physical Cores": psutil.cpu_count(logical=False),
        "Total Cores": psutil.cpu_count(logical=True),
        "Max Frequency": psutil.cpu_freq().max,
        "Min Frequency": psutil.cpu_freq().min,
        "Current Frequency": psutil.cpu_freq().current,
        "CPU Usage Per Core": psutil.cpu_percent(percpu=True),
        "Total CPU Usage": psutil.cpu_percent(),
    }

    # Memory information
    svmem = psutil.virtual_memory()
    memory_info = {
        "Total Memory": svmem.total,
        "Available Memory": svmem.available,
        "Used Memory": svmem.used,
        "Percentage": svmem.percent,
    }

    # Disk information
    partitions = psutil.disk_partitions()
    disk_info = {}
    for partition in partitions:
        partition_info = {
            "Device": partition.device,
            "Mountpoint": partition.mountpoint,
            "File System Type": partition.fstype,
        }
        try:
            partition_usage = psutil.disk_usage(partition.mountpoint)
            partition_info.update({
                "Total Size": partition_usage.total,
                "Used": partition_usage.used,
                "Free": partition_usage.free,
                "Percentage": partition_usage.percent,
            })
        except PermissionError:
            # This can happen if the disk is not ready
            continue
        disk_info[partition.device] = partition_info

    # Network information
    net_info = psutil.net_if_addrs()
    network_info = {}
    for interface_name, interface_addresses in net_info.items():
        for address in interface_addresses:
            if str(address.family) == 'AddressFamily.AF_INET':
                network_info[interface_name] = {
                    "IP Address": address.address,
                    "Netmask": address.netmask,
                    "Broadcast IP": address.broadcast,
                }
            elif str(address.family) == 'AddressFamily.AF_PACKET':
                network_info[interface_name] = {
                    "MAC Address": address.address,
                    "Netmask": address.netmask,
                    "Broadcast MAC": address.broadcast,
                }

    # Combine all information into one dictionary
    system_data = {
        "System Information": system_info,
        "CPU Information": cpu_info,
        "Memory Information": memory_info,
        "Disk Information": disk_info,
        "Network Information": network_info
    }

    return system_data

def save_system_info_to_json(filename="system_info.json"):
    system_data = get_system_info()
    import yaml
    yaml_data = yaml.dump(system_data)
    print (yaml_data)
    #for sd in system_data["Disk Information"]:
    #    print(sd)
    print (len(system_data["Disk Information"]))
    #with open(filename, 'w') as f:
    #    json.dump(system_data, f, indent=4)

if __name__ == "__main__":
    save_system_info_to_json()
    
    print("System information has been saved to system_info.json")

